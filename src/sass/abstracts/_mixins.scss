// Mixins
@use 'sass:map';
@use 'functions' as f;

@mixin btn-style($bg, $text) {
  border-style: solid;
  border: 2px solid $bg;
  color: $bg;
  /* for browsers that do not support gradients */
  background-image: -webkit-linear-gradient(90deg, $bg 50%, transparent 50%);
  /* Safari 5.1 - 6.0 */
  background-image: -o-linear-gradient(90deg, $bg 50%, transparent 50%);
  /* Opera 11.1 - 12.0 */
  background-image: -moz-linear-gradient(90deg, $bg 50%, transparent 50%);
  /* Firefox 3.6 do 1s5 */
  background-image: linear-gradient(90deg, $bg 50%, transparent 50%);
  /* standard syntax */
  transition: all 0.7s;

  &:hover {
    color: $text;
  }
}

$breakpoints: (
  'small': (
    'max': f.em(767),
  ),
  'medium': (
    'min': f.em(768),
    'max': f.em(911),
  ),
  'large': (
    'min': f.em(912),
  ),
);

@mixin breakpoint($size) {
  $bp: map.get($breakpoints, $size);

  @if map.has-key($bp, 'max') and map.has-key($bp, 'min') {
    @media (min-width: map.get($bp, 'min')) and (max-width: map.get($bp, 'max')) {
      @content;
    }
  } @else if map.has-key($bp, 'max') {
    @media (max-width: map.get($bp, 'max')) {
      @content;
    }
  } @else if map.has-key($bp, 'min') {
    @media (min-width: map.get($bp, 'min')) {
      @content;
    }
  } @else {
    @warn "No valid min/max for `#{$size}` breakpoint.";
  }
}
